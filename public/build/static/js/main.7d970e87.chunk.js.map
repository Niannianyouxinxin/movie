{"version":3,"sources":["assets/default.jpg","services/CommonTypes.ts","pages/Home.tsx","components/ImgUploader.tsx","components/MovieForm.tsx","services/MovieService.ts","pages/movie/AddMovie.tsx","pages/movie/EditMovie.tsx","components/MovieTable.tsx","redux/actions/MovieAction.ts","pages/movie/MovieList.tsx","pages/Layout.tsx","redux/reducers/MovieReducer.ts","redux/reducers/RootReducer.ts","redux/store.ts","App.tsx","index.tsx"],"names":["module","exports","SwitchType","style","textAlign","color","position","bottom","width","padding","margin","marginTop","href","textDecoration","React","Component","state","showModel","this","props","value","PlusOutlined","uid","name","url","p","formData","FormData","append","filename","file","request","Request","action","method","body","fetch","then","resp","json","err","message","error","onChange","data","visible","footer","onCancel","setState","alt","src","accept","listType","fileList","getFileList","customRequest","hanleRequest","bind","onRemove","onPreview","getUploadContent","AllAreas","label","AllTypes","MovieForm","formRef","createRef","handleSubmit","values","a","isHot","isComing","isClassic","onSubmit","result","success","history","push","handleSubmitFail","console","log","movie","newForm","current","setFieldsValue","ref","onFinish","onFinishFailed","Item","rules","required","initialValue","Group","options","min","step","valuePropName","rows","type","htmlType","withRouter","MovieService","axios","post","id","put","delete","get","condition","Promise","resolve","setTimeout","params","add","undefined","getMovieById","match","edit","onLoad","onSearch","key","marginBottom","display","e","onKeyChange","target","onPressEnter","icon","SearchOutlined","size","onClick","title","dataIndex","render","poster","className","defaultposterImg","filterDropdown","getFilterDropDown","filterIcon","text","join","timeLong","record","checked","newVal","onSwitchChange","_id","to","onConfirm","onDelete","okText","cancelText","danger","total","page","pageSize","limit","pagination","filters","rowKey","dataSource","columns","getColumns","getPageConfig","handleChange","loading","isLoading","saveMoviesAction","movies","payload","setLoadingAction","setConditionAction","deleteAction","changeSwitchAction","fetchMovies","dispatch","getState","curConditon","getMovies","deleteMovie","changeSwitch","connect","MovieAction","newState","newPage","MovieTable","Header","Layout","Sider","Content","_Layout","mode","theme","PieChartOutlined","DesktopOutlined","path","exact","component","Home","MovieList","AddMovie","EditMovie","defaultState","totalPage","saveMovie","Math","ceil","setCondition","setLoading","filter","m","find","d","newMovie","newData","map","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","logger","App","ReactDOM","document","getElementById"],"mappings":"qFAAAA,EAAOC,QAAU,IAA0B,qC,wGCsB/BC,E,0QCjBJ,OACE,oCACE,wBAAIC,MAAO,CAACC,UAAU,SAASC,MAAM,YAArC,gEAEA,uBAAGF,MAAO,CAACC,UAAU,SAASE,SAAS,WAAWC,OAAO,OAAOC,MAAM,MAAMC,QAAQ,EAAEC,OAAO,EAAEC,UAAU,SACvG,uBAAGC,KAAK,2BAA2BT,MAAO,CAACU,eAAgB,OAAOR,MAAM,SAAxE,uC,GAReS,IAAMC,W,wUCe/BC,MAAkB,CACdC,WAAU,G,iEAIV,OAAIC,KAAKC,MAAMC,MACJ,KAGH,6BAEI,kBAACC,EAAA,EAAD,MACA,0C,oCAOZ,OAAIH,KAAKC,MAAMC,MACJ,CACH,CACIE,IAAKJ,KAAKC,MAAMC,MAChBG,KAAML,KAAKC,MAAMC,MACjBI,IAAKN,KAAKC,MAAMC,QAIrB,K,4EAGQK,G,kFACXC,EAAW,IAAIC,UACVC,OAAOH,EAAEI,SAAUJ,EAAEK,MACxBC,EAAU,IAAIC,QAAQP,EAAEQ,OAAQ,CAClCC,OAAQ,OACRC,KAAMT,I,SAEgCU,MAAML,GAASM,MAAK,SAAAC,GAAI,OAAIA,EAAKC,U,QAArED,E,QACGE,IACLC,IAAQC,MAAM,4BAEXxB,KAAKC,MAAMwB,UACVzB,KAAKC,MAAMwB,SAASL,EAAKM,M,sIAK3B,IAAD,OACL,OACI,oCACI,kBAAC,IAAD,CACIC,QAAS3B,KAAKF,MAAMC,UACpB6B,OAAQ,KACRC,SAAU,WACN,EAAKC,SAAS,CACV/B,WAAU,MAIlB,yBAAKgC,IAAI,GAAG9C,MAAO,CAAEK,MAAO,QAAU0C,IAAKhC,KAAKC,MAAMC,SAE1D,kBAAC,IAAD,CACIa,OAAO,cACPV,KAAK,UACL4B,OAAO,iBACPC,SAAS,eACTC,SAAUnC,KAAKoC,cACfC,cAAerC,KAAKsC,aAAaC,KAAKvC,MACtCwC,SAAU,WACH,EAAKvC,MAAMwB,UACV,EAAKxB,MAAMwB,SAAS,KAG5BgB,UAAW,WACP,EAAKX,SAAS,CACV/B,WAAU,MAIjBC,KAAK0C,yB,GAlFG9C,IAAMC,W,kBCR7B8C,EAAW,CACb,CAAEC,MAAM,eAAK1C,MAAM,gBACnB,CAAE0C,MAAM,eAAK1C,MAAM,gBACnB,CAAE0C,MAAM,qBAAM1C,MAAM,uBAGlB2C,EAAW,CACb,CAAED,MAAM,eAAK1C,MAAM,gBACnB,CAAE0C,MAAM,eAAK1C,MAAM,gBACnB,CAAE0C,MAAM,eAAK1C,MAAM,gBACnB,CAAE0C,MAAM,eAAK1C,MAAM,iBAQjB4C,E,4MAEFC,QAAUnD,IAAMoD,Y,EAERC,a,uCAAe,WAAOC,GAAP,eAAAC,EAAA,6DACnBD,EAAM,eACCA,EADD,CAEFE,OAAuB,IAAjBF,EAAOE,MACbC,UAA6B,IAApBH,EAAOG,SAChBC,WAA+B,IAArBJ,EAAOI,YALF,SAOE,EAAKrD,MAAMsD,SAASL,GAPtB,QAObM,EAPa,QASfjC,IAAQC,MAAMgC,GAEdjC,IAAQkC,QAAQ,2BAAO,IAAI,WACvB,EAAKxD,MAAMyD,QAAQC,KAAK,aAZb,2C,wDAiBfC,iBAAmB,SAACV,GACxBW,QAAQC,IAAIZ,I,wEAGU3C,GACtBsD,QAAQC,IAAIvD,EAAEwD,OACd,IAAMC,EAAchE,KAAK+C,QAAQkB,QAC9BD,GACCA,EAAQE,eAAR,eACK3D,EAAEwD,U,+BAKL,IAAD,IAGL,OAFAF,QAAQC,IAAI,UACZD,QAAQC,IAAR,UAAY9D,KAAKC,MAAM8D,aAAvB,aAAY,EAAkB1D,MAE1B,kBAAC,IAAD,CAAMpB,MAAO,CAACK,MAAM,SACpB6E,IAAKnE,KAAK+C,QACVqB,SAAUpE,KAAKiD,aAAaV,KAAKvC,MACjCqE,eAAgBrE,KAAK4D,iBAAiBrB,KAAKvC,OAEvC,kBAAC,IAAKsE,KAAN,CACEjE,KAAK,OACLuC,MAAM,2BACN2B,MAAO,CAAC,CAAEC,UAAU,EAAMjD,QAAS,4BACnCkD,aAAY,UAAEzE,KAAKC,MAAM8D,aAAb,aAAE,EAAkB1D,MAE9B,kBAAC,IAAD,OAGJ,kBAAC,IAAKiE,KAAN,CACEjE,KAAK,SACLuC,MAAM,gBAEJ,kBAAC,EAAD,OAGJ,kBAAC,IAAK0B,KAAN,CACEjE,KAAK,QACLuC,MAAM,eACN2B,MAAO,CAAC,CAAEC,UAAU,EAAMjD,QAAS,0BAEjC,kBAAC,IAASmD,MAAV,CAAgBC,QAAShC,KAG7B,kBAAC,IAAK2B,KAAN,CACEjE,KAAK,QACLuC,MAAM,eACN2B,MAAO,CAAC,CAAEC,UAAU,EAAMjD,QAAS,0BAEjC,kBAAC,IAASmD,MAAV,CAAgBC,QAAS9B,KAG7B,kBAAC,IAAKyB,KAAN,CACEjE,KAAK,WACLuC,MAAM,oBACN2B,MAAO,CAAC,CAAEC,UAAU,EAAMjD,QAAS,4BAEjC,kBAAC,IAAD,CAAaqD,IAAK,EAAGC,KAAM,MAG/B,kBAAC,IAAKP,KAAN,CACEjE,KAAK,QACLuC,MAAM,2BACNkC,cAAc,WAEZ,kBAAC,IAAD,OAGJ,kBAAC,IAAKR,KAAN,CACEjE,KAAK,WACLuC,MAAM,2BACNkC,cAAc,WAEZ,kBAAC,IAAD,OAGJ,kBAAC,IAAKR,KAAN,CACEjE,KAAK,YACLuC,MAAM,2BACNkC,cAAc,WAEZ,kBAAC,IAAD,OAGJ,kBAAC,IAAKR,KAAN,CACEjE,KAAK,cACLuC,MAAM,gBAEJ,kBAAC,IAAD,CAAUmC,KAAM,KAGpB,kBAAC,IAAKT,KAAN,KAII,kBAAC,IAAD,CAAQU,KAAK,UAAUC,SAAS,UAAhC,sB,GAvHIrF,IAAMC,WA+HdqF,cAAWpC,G,kBCxIdqC,EAAb,0IAC4BpB,GAD5B,yFAE+BqB,IAAMC,KAAK,aAActB,GAFxD,uBAEgBrC,EAFhB,EAEgBA,KAFhB,kBAGeA,GAHf,sKAM6B4D,EAAYvB,GANzC,yFAO+BqB,IAAMG,IAAI,cAAgBD,EAAIvB,GAP7D,uBAOgBrC,EAPhB,EAOgBA,KAPhB,kBAQeA,GARf,0KAW+B4D,GAX/B,yFAY+BF,IAAMI,OAAO,cAAgBF,GAZ5D,uBAYgB5D,EAZhB,EAYgBA,KAZhB,kBAaeA,GAbf,8KAgBqC4D,GAhBrC,yFAiB+BF,IAAMK,IAAI,cAAgBH,GAjBzD,uBAiBgB5D,EAjBhB,EAiBgBA,KAjBhB,kBAkBeA,GAlBf,2KAqBkCgE,GArBlC,0FAsBe,IAAIC,SAAQ,SAAAC,GACfC,WAAU,sBAAC,8BAAA1C,EAAA,sEACgBiC,IAAMK,IAAI,cAAe,CAC5CK,OAAQJ,IAFL,gBACChE,EADD,EACCA,KAGRkE,EAAQlE,GAJD,2CAKR,OA5Bf,yG,yKCVQ,OACI,kBAAC,EAAD,CAAW6B,SAAQ,uCAAE,WAAOQ,GAAP,eAAAZ,EAAA,sEACEgC,EAAaY,IAAIhC,GADnB,YACX3C,EADW,QAETM,KAFS,yCAGN,IAHM,gCAKNN,EAAKE,KALC,2CAAF,4D,GAHF1B,IAAMC,W,8MCW/BC,MAAsB,CAClBiE,WAAMiC,G,kMAIab,EAAac,aAAajG,KAAKC,MAAMiG,MAAMJ,OAAOR,I,QAA/DlE,E,QACEM,MACJ1B,KAAK8B,SAAS,CACViC,MAAM3C,EAAKM,O,qIAKd,IAAD,OACJ,OACI,kBAAC,EAAD,CACIqC,MAAO/D,KAAKF,MAAMiE,MAClBR,SAAQ,uCAAE,WAAOQ,GAAP,eAAAZ,EAAA,sEACSgC,EAAagB,KAAK,EAAKlG,MAAMiG,MAAMJ,OAAOR,GAAGvB,GADtD,YACJ3C,EADI,QAEFM,KAFE,yCAGC,IAHD,gCAKCN,EAAKE,KALN,2CAAF,4D,GAnBK1B,IAAMC,W,8CNSvBb,K,cAAAA,E,oBAAAA,E,uBAAAA,M,gOOFRiB,W,oEAGQD,KAAKC,MAAMmG,QACXpG,KAAKC,MAAMmG,W,qCAKfpG,KAAKC,MAAMoG,a,wCAGG9F,GAAY,IAAD,OACzB,OACI,yBAAKtB,MAAO,CAAEM,QAAS,IACnB,kBAAC,IAAD,CACIW,MAAOF,KAAKC,MAAMyF,UAAUY,IAC5BrH,MAAO,CAAEK,MAAO,IAAKiH,aAAc,EAAGC,QAAS,SAC/C/E,SAAU,SAAAgF,GAAC,OAAI,EAAKxG,MAAMyG,YAAYD,EAAEE,OAAOzG,QAC/C0G,aAAc5G,KAAKC,MAAMoG,WAE7B,kBAAC,IAAD,CACIrB,KAAK,UACL6B,KAAM,kBAACC,EAAA,EAAD,MACNC,KAAK,QACL9H,MAAO,CAAEK,MAAO,IAChB0H,QAAShH,KAAKC,MAAMoG,UALxB,UASA,kBAAC,IAAD,CACAU,KAAK,QACL9H,MAAO,CAAEK,MAAO,IAChB0H,QAAS,WACL,EAAK/G,MAAMyG,YAAY,IACvB,EAAKzG,MAAMoG,aALf,Y,mCAciC,IAAD,OACxC,MAAO,CACH,CACIY,MAAO,eACPC,UAAW,SACXC,OAAQ,SAACC,GACL,OAAIA,EACO,yBAAKC,UAAU,cAActF,IAAI,eAAKC,IAAKoF,IAE3C,yBAAKC,UAAU,cAActF,IAAI,2BAAOC,IAAKsF,QAIhE,CACIL,MAAO,eACPC,UAAW,OACXK,eAAgBvH,KAAKwH,kBAAkBjF,KAAKvC,MAC5CyH,WAAY,kBAACX,EAAA,EAAD,OAEhB,CACIG,MAAO,eACPC,UAAW,QACXC,OAAQ,SAACO,GACL,OAAOA,EAAKC,KAAK,OAGzB,CACIV,MAAO,eACPC,UAAW,QACXC,OAAQ,SAACO,GACL,OAAOA,EAAKC,KAAK,OAGzB,CACIV,MAAO,eACPC,UAAW,WACXC,OAHJ,SAGWS,GACH,OAAOA,EAAW,iBAG1B,CACIX,MAAO,2BACPC,UAAW,QACXC,OAAQ,SAAC/D,EAAOyE,GACZ,OAAO,kBAAC,IAAD,CAAQC,QAAS1E,EAAO3B,SAAU,SAACsG,GACtC,EAAK9H,MAAM+H,eAAehJ,EAAWoE,MAAO2E,EAAQF,EAAOI,UAIvE,CACIhB,MAAO,2BACPC,UAAW,WACXC,OAAQ,SAAC/D,EAAOyE,GACZ,OAAO,kBAAC,IAAD,CAAQC,QAAS1E,EAAO3B,SAAU,SAACsG,GACtC,EAAK9H,MAAM+H,eAAehJ,EAAWqE,SAAU0E,EAAQF,EAAOI,UAI1E,CACIhB,MAAO,2BACPC,UAAW,YACXC,OAAQ,SAAC/D,EAAOyE,GACZ,OAAO,kBAAC,IAAD,CAAQC,QAAS1E,EAAO3B,SAAU,SAACsG,GACtC,EAAK9H,MAAM+H,eAAehJ,EAAWsE,UAAWyE,EAAQF,EAAOI,UAI3E,CACIhB,MAAO,eACPC,UAAW,MACXC,OAAQ,SAAC7B,GACL,OACI,6BACI,kBAAC,IAAD,CAAS4C,GAAI,eAAiB5C,GAC1B,kBAAC,IAAD,CAAQN,KAAK,UAAU+B,KAAK,SAA5B,iBAEJ,kBAAC,IAAD,CACIE,MAAM,kCACNkB,UAAS,sBAAE,sBAAAhF,EAAA,sEACD,EAAKlD,MAAMmI,SAAS9C,GADnB,OAEP/D,IAAQkC,QAAQ,4BAFT,2CAIX4E,OAAO,MACPC,WAAW,MAEX,kBAAC,IAAD,CAAQC,QAAM,EAACvD,KAAK,UAAU+B,KAAK,SAAnC,uB,sCAUxB,OAAyB,IAArB/G,KAAKC,MAAMuI,OAGR,CACHvE,QAASjE,KAAKC,MAAMyF,UAAU+C,KAC9BC,SAAU1I,KAAKC,MAAMyF,UAAUiD,MAC/BH,MAAOxI,KAAKC,MAAMuI,S,mCAIbI,EAAmCC,GAC5C7I,KAAKC,MAAMwB,SAASmH,EAAW3E,W,+BAI/B,OACI,kBAAC,IAAD,CACI6E,OAAO,MACPC,WAAY/I,KAAKC,MAAMyB,KACvBsH,QAAShJ,KAAKiJ,aACdL,WAAY5I,KAAKkJ,gBACjBzH,SAAUzB,KAAKmJ,aAAa5G,KAAKvC,MACjCoJ,QAASpJ,KAAKC,MAAMoJ,gB,GAlKPzJ,IAAMC,W,kBCRnC,SAASyJ,EAAiBC,EAAgBf,GACtC,MAAO,CACHxD,KAAK,aACLwE,QAAQ,CACJD,SACAf,UAOZ,SAASiB,EAAiBJ,GACtB,MAAO,CACHrE,KAAK,mBACLwE,QAAQH,GAMhB,SAASK,EAAmBhE,GACxB,MAAO,CACHV,KAAK,qBACLwE,QAAQ9D,GAMhB,SAASiE,EAAarE,GAClB,MAAO,CACHN,KAAK,eACLwE,QAAQlE,GAUhB,SAASsE,EAAmB5E,EAAgB+C,EAAezC,GACvD,MAAO,CACHN,KAAK,eACLwE,QAAQ,CACJxE,OACA+C,SACAzC,OA4CG,QACXgE,mBACAG,mBACAC,qBACAC,eACAE,YA1CJ,SAAqBnE,GAEjB,8CAAO,WAAOoE,EAASC,GAAhB,iBAAA5G,EAAA,6DAEH2G,EAASL,GAAiB,IAE1BK,EAASJ,EAAmBhE,IAEtBsE,EAAcD,IAAWhG,MAAM2B,UANlC,SAOgBP,EAAa8E,UAAUD,GAPvC,OAOG5I,EAPH,OASH0I,EAASR,EAAiBlI,EAAKM,KAAKN,EAAKoH,QAEzCsB,EAASL,GAAiB,IAXvB,2CAAP,yDAyCAS,YA1BJ,SAAqB5E,GAEf,8CAAO,WAAOwE,GAAP,SAAA3G,EAAA,6DACH2G,EAASL,GAAiB,IADvB,SAEGtE,EAAaK,OAAOF,GAFvB,OAGHwE,EAASH,EAAarE,IACtBwE,EAASL,GAAiB,IAJvB,2CAAP,uDAyBFG,qBACAO,aAlBJ,SAAsBnF,EAAgB+C,EAAezC,GAE7C,8CAAO,WAAMwE,GAAN,SAAA3G,EAAA,6DACH2G,EAASF,EAAmB5E,EAAK+C,EAAOzC,IADrC,SAEGH,EAAagB,KAAKb,EAAlB,eACDN,EAAM+C,IAHR,2CAAP,wDCpDOqC,oBArCf,SAAyBtK,GACrB,OAAOA,EAAMiE,SAGjB,SAA4B+F,GACxB,MAAO,CACH1D,OADG,WAEC0D,EAASO,GAAYR,YAAY,CAC7BpB,KAAK,EACLE,MAAM,GACNrC,IAAI,OAGZ0B,eARG,SAQYhD,EAAKsF,EAAShF,GACzBwE,EAASO,GAAYF,aAAanF,EAAKsF,EAAShF,KAE9C8C,SAXH,SAWY9C,GAAW,OAAD,oHACfwE,EAASO,GAAYH,YAAY5E,IADlB,8CAGzB7D,SAdG,SAcM8I,GACLT,EAASO,GAAYR,YAAY,CAC7BpB,KAAK8B,MAGb7D,YAnBG,SAmBSJ,GACRwD,EAASO,GAAYX,mBAAmB,CACpCpD,UAGRD,SAxBG,WAyBCyD,EAASO,GAAYR,YAAY,CAC7BpB,KAAK,SAMN2B,CAA4CI,G,uCC1BvDC,GACAC,KADAD,OAAQE,GACRD,KADQC,MAAOC,GACfF,KADeE,QAuCJC,GApCW,WACtB,OACI,yBAAKxD,UAAU,aACX,kBAAC,KAAD,KACI,kBAACoD,GAAD,CAAQpD,UAAU,UACd,kBAAC,IAAD,CAASa,GAAG,KAAZ,yCAEJ,kBAAC,KAAD,KACI,kBAACyC,GAAD,KACI,kBAAC,KAAD,CACIG,KAAK,SACLC,MAAM,QAEN,kBAAC,KAAKzG,KAAN,CAAWgC,IAAI,IAAIO,KAAM,kBAACmE,GAAA,EAAD,OACvB,kBAAC,IAAD,CAAS9C,GAAG,UAAZ,6BAEF,kBAAC,KAAK5D,KAAN,CAAWgC,IAAI,IAAIO,KAAM,kBAACoE,GAAA,EAAD,OACvB,kBAAC,IAAD,CAAS/C,GAAG,cAAZ,+BAIV,kBAAC0C,GAAD,KACI,yBAAKvD,UAAU,QACX,kBAAC,IAAD,CAAO6D,KAAK,IAAIC,OAAO,EAAMC,UAAWC,IACxC,kBAAC,IAAD,CAAOH,KAAK,SAASC,OAAO,EAAMC,UAAWE,KAC7C,kBAAC,IAAD,CAAOJ,KAAK,aAAaE,UAAWG,IACpC,kBAAC,IAAD,CAAOL,KAAK,kBAAkBE,UAAWI,U,SC7B/DC,GAA4B,CAC9B/J,KAAK,GACLgE,UAAU,CACN+C,KAAK,EACLE,MAAM,GACNrC,IAAI,IAERkC,MAAM,EACNa,WAAU,EACVqC,UAAU,GAKRC,GAA2C,SAAS7L,EAAMiB,GAC5D,OAAO,eACAjB,EADP,CAEI4B,KAAKX,EAAOyI,QAAQD,OACpBf,MAAMzH,EAAOyI,QAAQhB,MACrBkD,UAAUE,KAAKC,KAAK9K,EAAOyI,QAAQhB,MAAQ1I,EAAM4F,UAAUiD,UAI7DmD,GAAgD,SAAShM,EAAMiB,GACjE,IAAMuJ,EAAQ,eACPxK,EADO,CAEV4F,UAAU,eACH5F,EAAM4F,UADJ,GAEF3E,EAAOyI,WAIlB,OADAc,EAASoB,UAAYE,KAAKC,KAAKvB,EAAS9B,MAAQ8B,EAAS5E,UAAUiD,OAC5D2B,GAGLyB,GAA4C,SAASjM,EAAMiB,GAC7D,OAAO,eACAjB,EADP,CAEIuJ,UAAUtI,EAAOyI,WAInBU,GAAyC,SAASpK,EAAMiB,GAC1D,OAAO,eACAjB,EADP,CAEI4B,KAAK5B,EAAM4B,KAAKsK,QAAO,SAAAC,GAAC,OAAIA,EAAEhE,MAAQlH,EAAOyI,WAC7ChB,MAAM1I,EAAM0I,MAAQ,EACpBkD,UAAUE,KAAKC,MAAM/L,EAAM0I,MAAQ,GAAK1I,EAAM4F,UAAUiD,UAI1DwB,GAAsD,SAASrK,EAAMiB,GACvE,IAAMgD,EAAQjE,EAAM4B,KAAKwK,MAAK,SAAAC,GAAC,OAAIA,EAAElE,MAAQlH,EAAOyI,QAAQlE,MAC5D,IAAIvB,EACA,OAAOjE,EAEX,IAAMsM,EAAQ,eAAOrI,GACrBqI,EAASrL,EAAOyI,QAAQxE,MAAQjE,EAAOyI,QAAQzB,OAE/C,IAAMsE,EAAUvM,EAAM4B,KAAK4K,KAAI,SAAAH,GAC3B,OAAGA,EAAElE,MAAQlH,EAAOyI,QAAQlE,GACjB8G,EAEJD,KAEX,OAAO,eACArM,EADP,CAEI4B,KAAK2K,KC7EAE,GAAcC,aAAgB,CACvCzI,MDgFW,WAAiE,IAAvDjE,EAAsD,uDAAlC2L,GAAc1K,EAAoB,uCAC3E,OAAOA,EAAOiE,MACV,IAAK,eACD,OAAOkF,GAAYpK,EAAMiB,GAC7B,IAAK,aACD,OAAO4K,GAAU7L,EAAMiB,GAC3B,IAAK,qBACD,OAAO+K,GAAahM,EAAMiB,GAC9B,IAAK,mBACD,OAAOgL,GAAWjM,EAAMiB,GAC5B,IAAK,eACD,OAAOoJ,GAAarK,EAAMiB,GAC9B,QACI,OAAOjB,M,+BEjGN2M,GAAQC,aAAYH,GAAYI,aAAgBC,KAAqCC,OCWnFC,OAVf,WACE,OACE,kBAAC,IAAD,CAAUL,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOvB,KAAK,IAAIE,UAAWV,QCJnCqC,IAAS5F,OACL,kBAAC,GAAD,MAEF6F,SAASC,eAAe,W","file":"static/js/main.7d970e87.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default.24a1de39.jpg\";","export interface IResponseError{\r\n    err:string,\r\n    data:null\r\n}\r\n\r\nexport interface IResponseData<T>{\r\n    err:\"\",\r\n    data:T\r\n}\r\n\r\nexport interface IResponsePageData<T>{\r\n    err:\"\",\r\n    total:number,\r\n    data:T[]\r\n}\r\n\r\nexport interface ISearchCondition{\r\n    page?:number,\r\n    limit?:number,\r\n    key?:string\r\n}\r\n\r\nexport enum SwitchType {\r\n    isHot = \"isHot\",\r\n    isComing = \"isComing\",\r\n    isClassic = \"isClassic\"\r\n}","import React from \"react\"\r\n\r\nexport default class extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n          <>\r\n            <h1 style={{textAlign:\"center\",color:\"#1890ff\"}}>欢迎来到电影管理系统</h1>\r\n            \r\n            <p style={{textAlign:\"center\",position:\"absolute\",bottom:\"10px\",width:\"84%\",padding:0,margin:0,marginTop:\"20px\"}}>\r\n              <a href=\"http://beian.miit.gov.cn\" style={{textDecoration: \"none\",color:\"#000\"}}>陇ICP备20000485号</a>   \r\n            </p>\r\n          </>\r\n        )\r\n    }\r\n}","import React from \"react\"\r\nimport { Upload, message, Modal } from \"antd\"\r\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\"\r\nimport { UploadFile } from \"antd/lib/upload/interface\";\r\nimport { IResponseData } from \"../services/CommonTypes\";\r\n\r\ninterface IImgUploaderProps {\r\n    value?: string,\r\n    onChange?: (imgUrl: string) => void\r\n}\r\n\r\ninterface IImgState {\r\n    showModel:boolean\r\n}\r\n\r\nexport default class extends React.Component<IImgUploaderProps,IImgState> {\r\n\r\n    state:IImgState = {\r\n        showModel:false\r\n    }\r\n\r\n    private getUploadContent() {\r\n        if (this.props.value) {\r\n            return null;\r\n        } else {\r\n            return (\r\n                <div>\r\n                    {/* <LoadingOutlined /> */}\r\n                    <PlusOutlined />\r\n                    <div>Upload</div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    private getFileList(): UploadFile<any>[] {\r\n        if (this.props.value) {\r\n            return [\r\n                {\r\n                    uid: this.props.value,\r\n                    name: this.props.value,\r\n                    url: this.props.value\r\n                }\r\n            ]\r\n        }\r\n        return [];\r\n    }\r\n\r\n    async hanleRequest(p: any) {\r\n        let formData = new FormData();\r\n        formData.append(p.filename, p.file);\r\n        const request = new Request(p.action, {\r\n            method: \"post\",\r\n            body: formData\r\n        });\r\n        const resp: IResponseData<string> = await fetch(request).then(resp => resp.json());\r\n        if (resp.err) {\r\n            message.error(\"上传失败\");\r\n        } else {\r\n            if(this.props.onChange){\r\n                this.props.onChange(resp.data);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Modal\r\n                    visible={this.state.showModel}\r\n                    footer={null}\r\n                    onCancel={() => {\r\n                        this.setState({\r\n                            showModel:false\r\n                        })\r\n                    }}\r\n                >\r\n                    <img alt=\"\" style={{ width: '100%' }} src={this.props.value} />\r\n                </Modal>\r\n                <Upload\r\n                    action=\"/api/upload\"\r\n                    name=\"imgfile\"\r\n                    accept=\".jpg,.png,.gif\"\r\n                    listType=\"picture-card\"\r\n                    fileList={this.getFileList()}\r\n                    customRequest={this.hanleRequest.bind(this)}\r\n                    onRemove={() => {\r\n                        if(this.props.onChange){\r\n                            this.props.onChange(\"\");\r\n                        }\r\n                    }}\r\n                    onPreview={() => {\r\n                        this.setState({\r\n                            showModel:true\r\n                        })\r\n                    }}\r\n                >\r\n                    {this.getUploadContent()}\r\n                </Upload>\r\n            </>\r\n        )\r\n    }\r\n} ","import React from \"react\"\r\nimport { Form, Button, Input, Checkbox, InputNumber, Switch, message } from \"antd\";\r\nimport ImgUploader from \"./ImgUploader\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { IMovie } from \"../services/MovieService\";\r\nimport { withRouter, RouteComponentProps } from \"react-router\";\r\n\r\nconst AllAreas = [\r\n    { label:\"中国\",value:\"中国\"},\r\n    { label:\"美国\",value:\"美国\"},\r\n    { label:\"俄罗斯\",value:\"俄罗斯\"}\r\n];\r\n\r\nconst AllTypes = [\r\n    { label:\"爱情\",value:\"爱情\"},\r\n    { label:\"喜剧\",value:\"喜剧\"},\r\n    { label:\"校园\",value:\"校园\"},\r\n    { label:\"科幻\",value:\"科幻\"}\r\n];\r\n\r\ninterface IFormProp extends RouteComponentProps{\r\n    onSubmit:(movie:IMovie) => Promise<string>\r\n    movie?:IMovie\r\n}\r\n\r\nclass MovieForm extends React.Component<IFormProp> {\r\n\r\n    formRef = React.createRef();\r\n\r\n    private handleSubmit = async (values:any) => {\r\n        values = {\r\n            ...values,\r\n            isHot:values.isHot === true ? true : false,\r\n            isComing:values.isComing === true ? true : false,\r\n            isClassic:values.isClassic === true ? true : false,\r\n        }\r\n        const result = await this.props.onSubmit(values);\r\n        if(result){\r\n            message.error(result);\r\n        }else{\r\n            message.success(\"处理成功\",0.5,() => {\r\n                this.props.history.push(\"/movie\")\r\n            });\r\n        }\r\n    }\r\n\r\n    private handleSubmitFail = (values:any) => {\r\n        console.log(values);\r\n    }\r\n\r\n    componentWillReceiveProps(p:any) {\r\n        console.log(p.movie);\r\n        const newForm:any = this.formRef.current\r\n        if(newForm){\r\n            newForm.setFieldsValue({\r\n              ...p.movie\r\n            });\r\n        }\r\n      }\r\n\r\n    render (){\r\n        console.log(\"render\");\r\n        console.log(this.props.movie?.name)\r\n        return (\r\n            <Form style={{width:\"400px\"}}\r\n            ref={this.formRef as any}\r\n            onFinish={this.handleSubmit.bind(this)}\r\n            onFinishFailed={this.handleSubmitFail.bind(this)}\r\n            >\r\n                <Form.Item\r\n                  name=\"name\"\r\n                  label=\"电影名称\"\r\n                  rules={[{ required: true, message: 'Please input MovieName!' }]}\r\n                  initialValue={this.props.movie?.name}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name=\"poster\"\r\n                  label=\"封面\"\r\n                >\r\n                    <ImgUploader />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name=\"areas\"\r\n                  label=\"地区\"\r\n                  rules={[{ required: true, message: 'Please select Areas!' }]}\r\n                >\r\n                    <Checkbox.Group options={AllAreas}/>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name=\"types\"\r\n                  label=\"类型\"\r\n                  rules={[{ required: true, message: 'Please select Types!' }]}\r\n                >\r\n                    <Checkbox.Group options={AllTypes}/>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name=\"timeLong\"\r\n                  label=\"时长(min)\"\r\n                  rules={[{ required: true, message: 'Please input TimeLong!' }]}\r\n                >\r\n                    <InputNumber min={1} step={10}/>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name=\"isHot\"\r\n                  label=\"正在热映\"\r\n                  valuePropName=\"checked\"\r\n                >\r\n                    <Switch />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name=\"isComing\"\r\n                  label=\"即将上映\"\r\n                  valuePropName=\"checked\"\r\n                >\r\n                    <Switch />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name=\"isClassic\"\r\n                  label=\"经典影片\"\r\n                  valuePropName=\"checked\"\r\n                >\r\n                    <Switch />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name=\"description\"\r\n                  label=\"描述\"\r\n                >\r\n                    <TextArea rows={3} />\r\n                </Form.Item>\r\n              \r\n                <Form.Item\r\n                //   labelCol={{span:0}}\r\n                //   wrapperCol={{span:20,offset:4}}\r\n                >\r\n                    <Button type=\"primary\" htmlType=\"submit\">提交</Button>\r\n                </Form.Item>\r\n\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default (withRouter(MovieForm))\r\n","import axios from \"axios\";\r\nimport { IResponseData, IResponseError, ISearchCondition, IResponsePageData } from \"./CommonTypes\";\r\n\r\nexport interface IMovie {\r\n    _id?: string,\r\n    name: string,\r\n    types: string[],\r\n    areas: string[],\r\n    timeLong: number,\r\n    isHot: boolean,\r\n    isComing: boolean,\r\n    isClassic: boolean,\r\n    description?: string,\r\n    poster?: string\r\n}\r\n\r\nexport class MovieService {\r\n    public static async add(movie: IMovie): Promise<IResponseData<IMovie> | IResponseError> {\r\n        const { data } = await axios.post(\"/api/movie\", movie);\r\n        return data;\r\n    }\r\n\r\n    public static async edit(id: string, movie: Partial<IMovie>): Promise<IResponseData<true> | IResponseError> {\r\n        const { data } = await axios.put(\"/api/movie/\" + id, movie);\r\n        return data;\r\n    }\r\n\r\n    public static async delete(id: string): Promise<IResponseData<true> | IResponseError> {\r\n        const { data } = await axios.delete(\"/api/movie/\" + id);\r\n        return data;\r\n    }\r\n\r\n    public static async getMovieById(id: string): Promise<IResponseData<IMovie | null>> {\r\n        const { data } = await axios.get(\"/api/movie/\" + id);\r\n        return data;\r\n    }\r\n\r\n    public static async getMovies(condition: ISearchCondition): Promise<IResponsePageData<IMovie>> {\r\n        return new Promise(resolve => {\r\n            setTimeout(async () => {\r\n                const { data } = await axios.get(\"/api/movie/\", {\r\n                    params: condition\r\n                });\r\n                resolve(data);\r\n            }, 0)\r\n        })\r\n\r\n    }\r\n}","import React from \"react\"\r\nimport MovieForm from \"../../components/MovieForm\"\r\nimport { MovieService } from \"../../services/MovieService\";\r\n\r\nexport default class extends React.Component {\r\n    render(){\r\n        return (\r\n            <MovieForm onSubmit={async (movie) => {\r\n                const resp = await MovieService.add(movie)\r\n                if(resp.data){\r\n                    return \"\";\r\n                }else{\r\n                    return resp.err;\r\n                }\r\n            }}/>\r\n        )\r\n    }\r\n}","import React from \"react\"\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport MovieForm from \"../../components/MovieForm\";\r\nimport { MovieService, IMovie } from \"../../services/MovieService\";\r\n\r\ninterface IParams {\r\n    id:string\r\n}\r\n\r\ninterface EdisPageState{\r\n    movie?:IMovie\r\n}\r\n\r\nexport default class extends React.Component<RouteComponentProps<IParams>,EdisPageState> {\r\n    \r\n    state:EdisPageState = {\r\n        movie:undefined\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const resp = await MovieService.getMovieById(this.props.match.params.id);\r\n        if(resp.data){\r\n            this.setState({\r\n                movie:resp.data\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <MovieForm \r\n                movie={this.state.movie}\r\n                onSubmit={async (movie) => {\r\n                const resp = await MovieService.edit(this.props.match.params.id,movie)\r\n                if(resp.data){\r\n                    return \"\";\r\n                }else{\r\n                    return resp.err;\r\n                }\r\n            }}/>\r\n        )\r\n    }\r\n}","import React from \"react\"\r\nimport { IMovieState } from \"../redux/reducers/MovieReducer\"\r\nimport { Table, Switch, Button, message, Popconfirm, Input } from \"antd\"\r\nimport { IMovie } from \"../services/MovieService\";\r\nimport { ColumnProps, TablePaginationConfig } from \"antd/lib/table\";\r\nimport defaultposterImg from \"../assets/default.jpg\"\r\nimport { SwitchType } from \"../services/CommonTypes\";\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\n\r\nexport interface IMovieTableEvents {\r\n    onLoad: () => void;\r\n    onSwitchChange: (type: SwitchType, newState: boolean, id: string) => void;\r\n    onDelete: (id: string) => Promise<void>,\r\n    onChange: (newPage: number) => void,\r\n    onKeyChange:(key:string) => void,\r\n    onSearch:() => void\r\n}\r\n\r\nexport default class extends React.Component<IMovieState & IMovieTableEvents> {\r\n    props: any;\r\n\r\n    componentDidMount() {\r\n        if (this.props.onLoad) {\r\n            this.props.onLoad();\r\n        }\r\n    }\r\n\r\n    private handleSearch(){\r\n        this.props.onSearch();\r\n    }\r\n\r\n    getFilterDropDown(p: object) {\r\n        return (\r\n            <div style={{ padding: 8 }}>\r\n                <Input\r\n                    value={this.props.condition.key}\r\n                    style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n                    onChange={e => this.props.onKeyChange(e.target.value)}\r\n                    onPressEnter={this.props.onSearch}\r\n                />\r\n                <Button\r\n                    type=\"primary\"\r\n                    icon={<SearchOutlined />}\r\n                    size=\"small\"\r\n                    style={{ width: 90 }}\r\n                    onClick={this.props.onSearch}\r\n                >\r\n                    Search\r\n                </Button>\r\n                <Button\r\n                size=\"small\"\r\n                style={{ width: 90 }}\r\n                onClick={() => {\r\n                    this.props.onKeyChange(\"\")\r\n                    this.props.onSearch();\r\n                }}\r\n                >\r\n                    Reset\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    private getColumns(): ColumnProps<IMovie>[] {\r\n        return [\r\n            {\r\n                title: \"海报\",\r\n                dataIndex: \"poster\",\r\n                render: (poster) => {\r\n                    if (poster) {\r\n                        return <img className=\"tablePoster\" alt=\"图片\" src={poster} />\r\n                    } else {\r\n                        return <img className=\"tablePoster\" alt=\"默认图片\" src={defaultposterImg} />\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                title: \"名称\",\r\n                dataIndex: \"name\",\r\n                filterDropdown: this.getFilterDropDown.bind(this),\r\n                filterIcon: <SearchOutlined />\r\n            },\r\n            {\r\n                title: \"地区\",\r\n                dataIndex: \"areas\",\r\n                render: (text: string[]) => {\r\n                    return text.join(\" \")\r\n                }\r\n            },\r\n            {\r\n                title: \"类型\",\r\n                dataIndex: \"types\",\r\n                render: (text: string[]) => {\r\n                    return text.join(\" \")\r\n                }\r\n            },\r\n            {\r\n                title: \"时长\",\r\n                dataIndex: \"timeLong\",\r\n                render(timeLong) {\r\n                    return timeLong + \"分钟\"\r\n                }\r\n            },\r\n            {\r\n                title: \"正在热映\",\r\n                dataIndex: \"isHot\",\r\n                render: (isHot, record) => {\r\n                    return <Switch checked={isHot} onChange={(newVal: any) => {\r\n                        this.props.onSwitchChange(SwitchType.isHot, newVal, record._id!)\r\n                    }} />\r\n                }\r\n            },\r\n            {\r\n                title: \"即将上映\",\r\n                dataIndex: \"isComing\",\r\n                render: (isHot, record) => {\r\n                    return <Switch checked={isHot} onChange={(newVal: any) => {\r\n                        this.props.onSwitchChange(SwitchType.isComing, newVal, record._id!)\r\n                    }} />\r\n                }\r\n            },\r\n            {\r\n                title: \"经典影片\",\r\n                dataIndex: \"isClassic\",\r\n                render: (isHot, record) => {\r\n                    return <Switch checked={isHot} onChange={(newVal: any) => {\r\n                        this.props.onSwitchChange(SwitchType.isClassic, newVal, record._id!)\r\n                    }} />\r\n                }\r\n            },\r\n            {\r\n                title: \"操作\",\r\n                dataIndex: \"_id\",\r\n                render: (id: string) => {\r\n                    return (\r\n                        <div>\r\n                            <NavLink to={\"/movie/edit/\" + id}>\r\n                                <Button type=\"primary\" size=\"small\">编辑</Button>\r\n                            </NavLink>\r\n                            <Popconfirm\r\n                                title=\"Are you sure delete this movie?\"\r\n                                onConfirm={async () => {\r\n                                    await this.props.onDelete(id);\r\n                                    message.success(\"删除成功\");\r\n                                }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button danger type=\"primary\" size=\"small\">删除</Button>\r\n                            </Popconfirm>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        ];\r\n    }\r\n\r\n    getPageConfig(): TablePaginationConfig | false {\r\n        if (this.props.total === 0) {\r\n            return false;\r\n        }\r\n        return {\r\n            current: this.props.condition.page,\r\n            pageSize: this.props.condition.limit,\r\n            total: this.props.total\r\n        };\r\n    }\r\n\r\n    handleChange(pagination: TablePaginationConfig, filters: Record<string, React.ReactText[] | null>) {\r\n        this.props.onChange(pagination.current!)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Table\r\n                rowKey=\"_id\"\r\n                dataSource={this.props.data}\r\n                columns={this.getColumns()}\r\n                pagination={this.getPageConfig()}\r\n                onChange={this.handleChange.bind(this)}\r\n                loading={this.props.isLoading}\r\n            ></Table>\r\n        )\r\n    }\r\n} ","import { IAction } from \"./ActionTypes\"\r\nimport { IMovie, MovieService } from \"../../services/MovieService\"\r\nimport { ISearchCondition, SwitchType } from \"../../services/CommonTypes\"\r\nimport { ThunkAction } from \"redux-thunk\"\r\nimport { IRootState } from \"../reducers/RootReducer\"\r\n\r\nexport type SaveMoviesAction = IAction<\"movie_save\",{\r\n    movies:IMovie[],\r\n    total:number\r\n}>\r\n\r\nfunction saveMoviesAction(movies:IMovie[],total:number):SaveMoviesAction {\r\n    return {\r\n        type:\"movie_save\",\r\n        payload:{\r\n            movies,\r\n            total\r\n        }\r\n    }\r\n}\r\n\r\nexport type SetLoadingAction = IAction<\"movie_setLoading\",boolean>\r\n \r\nfunction setLoadingAction(isLoading: boolean):SetLoadingAction{\r\n    return {\r\n        type:\"movie_setLoading\",\r\n        payload:isLoading\r\n    }\r\n}\r\n\r\nexport type SetConditionAction = IAction<\"movie_setCondition\",ISearchCondition>\r\n\r\nfunction setConditionAction(condition:ISearchCondition):SetConditionAction{\r\n    return {\r\n        type:\"movie_setCondition\",\r\n        payload:condition\r\n    }\r\n}\r\n\r\nexport type DeleteAction = IAction<\"movie_delete\",string>\r\n\r\nfunction deleteAction(id:string):DeleteAction{\r\n    return {\r\n        type:\"movie_delete\",\r\n        payload:id\r\n    }\r\n}\r\n\r\nexport type MovieChangeSwitchAction = IAction<\"movie_switch\",{\r\n    type:SwitchType, \r\n    newVal:boolean,\r\n    id:string\r\n}>\r\n\r\nfunction changeSwitchAction(type:SwitchType,newVal:boolean,id:string):MovieChangeSwitchAction{\r\n    return {\r\n        type:\"movie_switch\",\r\n        payload:{\r\n            type,\r\n            newVal,\r\n            id\r\n        }\r\n    }\r\n}\r\n\r\nexport type MovieActions = SaveMoviesAction | SetConditionAction | SetLoadingAction | DeleteAction | MovieChangeSwitchAction;\r\n\r\nfunction fetchMovies(condition:ISearchCondition)\r\n    :ThunkAction<Promise<void>,IRootState,any,MovieActions> {\r\n    return async (dispatch,getState) => {\r\n        // 1.设置加载状态\r\n        dispatch(setLoadingAction(true));\r\n        // 2.设置条件\r\n        dispatch(setConditionAction(condition));\r\n        // 3.设置服务器数据\r\n        const curConditon = getState().movie.condition;\r\n        const resp = await MovieService.getMovies(curConditon);\r\n        // 4.更改仓库数据\r\n        dispatch(saveMoviesAction(resp.data,resp.total));\r\n        // 关闭加载状态\r\n        dispatch(setLoadingAction(false));\r\n    }\r\n}\r\n\r\nfunction deleteMovie(id:string)\r\n    :ThunkAction<Promise<void>,IRootState,any,MovieActions> {\r\n      return async (dispatch) => {\r\n          dispatch(setLoadingAction(true));\r\n          await MovieService.delete(id);\r\n          dispatch(deleteAction(id));\r\n          dispatch(setLoadingAction(false));\r\n      }\r\n}\r\n\r\nfunction changeSwitch(type:SwitchType,newVal:boolean,id:string)\r\n    :ThunkAction<Promise<void>,IRootState,any,MovieActions> {\r\n        return async dispatch => {\r\n            dispatch(changeSwitchAction(type,newVal,id));\r\n            await MovieService.edit(id,{\r\n                [type]:newVal\r\n            })\r\n        }\r\n    }\r\n\r\nexport default {\r\n    saveMoviesAction,\r\n    setLoadingAction,\r\n    setConditionAction,\r\n    deleteAction,\r\n    fetchMovies,\r\n    deleteMovie,\r\n    changeSwitchAction,\r\n    changeSwitch\r\n}","import React, { Dispatch } from \"react\"\r\nimport MovieTable, { IMovieTableEvents } from \"../../components/MovieTable\"\r\nimport { connect } from \"react-redux\"\r\nimport { IRootState } from \"../../redux/reducers/RootReducer\"\r\nimport MovieAction, { MovieActions } from \"../../redux/actions/MovieAction\"\r\nimport { IMovieState } from \"../../redux/reducers/MovieReducer\"\r\n\r\nfunction mapStateToProps(state:IRootState):IMovieState{\r\n    return state.movie\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch:Dispatch<any>):IMovieTableEvents{\r\n    return {\r\n        onLoad() {\r\n            dispatch(MovieAction.fetchMovies({\r\n                page:1,\r\n                limit:10,\r\n                key:\"\"\r\n            }))\r\n        },\r\n        onSwitchChange(type,newState,id){\r\n            dispatch(MovieAction.changeSwitch(type,newState,id));\r\n        },\r\n        async onDelete(id:string){\r\n            await dispatch(MovieAction.deleteMovie(id))\r\n        },\r\n        onChange(newPage){\r\n            dispatch(MovieAction.fetchMovies({\r\n                page:newPage\r\n            }))\r\n        },\r\n        onKeyChange(key){\r\n            dispatch(MovieAction.setConditionAction({\r\n                key\r\n            }))\r\n        },\r\n        onSearch(){\r\n            dispatch(MovieAction.fetchMovies({\r\n                page:1\r\n            }))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(MovieTable);","import React from \"react\";\r\nimport { NavLink, Route } from \"react-router-dom\"\r\nimport Home from \"./Home\"\r\nimport AddMovie from \"./movie/AddMovie\"\r\nimport EditMovie from \"./movie/EditMovie\"\r\nimport MovieList from \"./movie/MovieList\"\r\nimport { Layout, Menu } from \"antd\"\r\nimport {\r\n    // AppstoreOutlined,\r\n    // MenuUnfoldOutlined,\r\n    // MenuFoldOutlined,\r\n    PieChartOutlined,\r\n    DesktopOutlined,\r\n    // ContainerOutlined,\r\n    // MailOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst {\r\n    Header, Sider, Content\r\n} = Layout;\r\n\r\nconst _Layout: React.FC = function () {\r\n    return (\r\n        <div className=\"container\">\r\n            <Layout>\r\n                <Header className=\"Header\">\r\n                    <NavLink to=\"/\">电影管理系统</NavLink>\r\n                </Header>\r\n                <Layout>\r\n                    <Sider>\r\n                        <Menu\r\n                            mode=\"inline\"\r\n                            theme=\"dark\"\r\n                        >\r\n                            <Menu.Item key=\"1\" icon={<PieChartOutlined />}>\r\n                              <NavLink to=\"/movie\">电影列表</NavLink>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"2\" icon={<DesktopOutlined />}>\r\n                              <NavLink to=\"/movie/add\">添加电影</NavLink>\r\n                            </Menu.Item>\r\n                        </Menu>\r\n                    </Sider>\r\n                    <Content>\r\n                        <div className=\"main\">\r\n                            <Route path=\"/\" exact={true} component={Home}></Route>\r\n                            <Route path=\"/movie\" exact={true} component={MovieList}></Route>\r\n                            <Route path=\"/movie/add\" component={AddMovie}></Route>\r\n                            <Route path=\"/movie/edit/:id\" component={EditMovie}></Route>\r\n                        </div>\r\n                    </Content>\r\n                </Layout>\r\n            </Layout>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default _Layout;","import { IMovie } from \"../../services/MovieService\";\r\nimport { ISearchCondition } from \"../../services/CommonTypes\";\r\nimport { MovieActions, SaveMoviesAction, SetConditionAction, SetLoadingAction, DeleteAction, MovieChangeSwitchAction } from \"../actions/MovieAction\";\r\nimport { Reducer } from \"react\";\r\n\r\nexport type IMovieCondition = Required<ISearchCondition>\r\n\r\nexport interface IMovieState{\r\n    data:IMovie[],\r\n    /**\r\n     * 查询条件\r\n     */\r\n    condition:IMovieCondition,\r\n    total:number,\r\n    isLoading:boolean,\r\n    totalPage:number\r\n}\r\n\r\nconst defaultState: IMovieState = {\r\n    data:[],\r\n    condition:{\r\n        page:1,\r\n        limit:10,\r\n        key:''\r\n    },\r\n    total:0,\r\n    isLoading:false,\r\n    totalPage:0\r\n}\r\n\r\ntype MovieReducer<A> = Reducer<IMovieState,A>\r\n\r\nconst saveMovie:MovieReducer<SaveMoviesAction> = function(state,action){\r\n    return {\r\n        ...state,\r\n        data:action.payload.movies,\r\n        total:action.payload.total,\r\n        totalPage:Math.ceil(action.payload.total / state.condition.limit)\r\n    };\r\n}\r\n\r\nconst setCondition:MovieReducer<SetConditionAction> = function(state,action){\r\n    const newState = {\r\n        ...state,\r\n        condition:{\r\n            ...state.condition,\r\n            ...action.payload\r\n        }\r\n    };\r\n    newState.totalPage = Math.ceil(newState.total / newState.condition.limit);\r\n    return newState;\r\n}\r\n\r\nconst setLoading:MovieReducer<SetLoadingAction> = function(state,action){\r\n    return {\r\n        ...state,\r\n        isLoading:action.payload\r\n    };\r\n}\r\n\r\nconst deleteMovie:MovieReducer<DeleteAction> = function(state,action){\r\n    return {\r\n        ...state,\r\n        data:state.data.filter(m => m._id !== action.payload),\r\n        total:state.total - 1,\r\n        totalPage:Math.ceil((state.total - 1) / state.condition.limit)\r\n    };\r\n}\r\n\r\nconst changeSwitch: MovieReducer<MovieChangeSwitchAction> = function(state,action){\r\n    const movie = state.data.find(d => d._id === action.payload.id);\r\n    if(!movie){\r\n        return state;\r\n    }\r\n    const newMovie = {...movie};\r\n    newMovie[action.payload.type] = action.payload.newVal;\r\n\r\n    const newData = state.data.map(d => {\r\n        if(d._id === action.payload.id){\r\n            return newMovie;\r\n        }\r\n        return d;\r\n    })\r\n    return {\r\n        ...state,\r\n        data:newData\r\n    }\r\n}\r\n\r\nexport default function (state:IMovieState = defaultState, action:MovieActions){\r\n    switch(action.type) {\r\n        case \"movie_delete\":\r\n            return deleteMovie(state,action);\r\n        case \"movie_save\":\r\n            return saveMovie(state,action);\r\n        case \"movie_setCondition\":\r\n            return setCondition(state,action);\r\n        case \"movie_setLoading\":\r\n            return setLoading(state,action);\r\n        case \"movie_switch\":\r\n            return changeSwitch(state,action);\r\n        default:\r\n            return state;\r\n    }\r\n}","import \"redux\"\r\nimport { combineReducers } from \"redux\"\r\nimport movie, { IMovieState } from \"./MovieReducer\"\r\n\r\nexport interface IRootState {\r\n    movie: IMovieState\r\n}\r\n\r\nexport const rootReducer = combineReducers({\r\n    movie\r\n})","import { createStore, applyMiddleware } from \"redux\"\r\nimport { rootReducer, IRootState } from \"./reducers/RootReducer\"\r\nimport logger from \"redux-logger\"\r\nimport thunk, { ThunkMiddleware } from \"redux-thunk\"\r\n\r\nexport const store = createStore(rootReducer,applyMiddleware(thunk as ThunkMiddleware<IRootState>,logger));","import React from 'react';\nimport Layout from \"./pages/Layout\"\nimport { BrowserRouter, Route } from \"react-router-dom\"\nimport { Provider } from \"react-redux\"\nimport { store } from \"./redux/store\"\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <Route path=\"/\" component={Layout}></Route>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"antd/dist/antd.css\"\nimport App from './App';\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);"],"sourceRoot":""}